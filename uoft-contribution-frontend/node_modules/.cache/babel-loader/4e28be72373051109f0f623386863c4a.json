{"ast":null,"code":"var _jsxFileName = \"/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/Blog.js\";\nimport React, { Component } from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport BlogItem from \"./BlogItem\";\nimport '../style/Blog.css';\nimport CreateArticle from \"./CreateArticle\";\nimport blogs_info from \"../data/articles\";\nimport { sanitizeHtml } from \"bootstrap/js/src/tools/sanitizer\";\nimport { backgrounds } from \"../Background\";\nimport { ID, TOKEN_KEY, URL } from \"../constants\";\nimport Axios from \"axios\";\n\nclass Blog extends Component {\n  constructor() {\n    super();\n    const random = Math.floor(Math.random() * backgrounds.length); // console.log(\"length is \", backgrounds.length)\n    // console.log(backgrounds)\n\n    const background = backgrounds[random];\n    this.state = {\n      background: background,\n      blogs_info: blogs_info.articles\n    };\n  } // get all the article information in db\n  //Since this blog page need to be called at the time when user click the blog components, so at the time user click the blogs, front end need\n  //to send the request to the backend to get the list of the blogs - Hong\n\n\n  componentDidMount() {\n    const url = `${URL}/blogs/`;\n    Axios({\n      method: 'POST',\n      url: url,\n      data: {\n        \"username\": localStorage.getItem(ID)\n      }\n    }).then(response => {\n      //print response\n      console.log(\"Response: \", response);\n      ;\n      this.setState({\n        blogs_info: response.data\n      });\n      console.log(\"Clicked !!!!!! Ingredient: \", this.state.blogs_info);\n      return response.data;\n    }).catch(err => {\n      console.log(\"Get Articles Failed: \", err);\n    });\n  } // handleArticles = (blogs_info) => {\n  //     let result = [];\n  //\n  //     for (var i = 0; i < blogs_info.length; i++){\n  //         let article = blogs_info[i];\n  //         const id = article._id.$oid;\n  //         console.log(\"id is: \", id)\n  //         result.push(<BlogItem\n  //             src={article.imageURL}\n  //             text={article.title}\n  //             label=\"Article\"\n  //             rating={article.rating}\n  //             // _id: {$oid: \"5fae11b077e74277bdbbbd5e\"}\n  //             path={id}/>)\n  //     }\n  //     return result;\n  // }\n\n\n  render() {\n    const {\n      background,\n      blogs_info\n    } = this.state;\n    var backgroundStyle = {\n      backgroundImage: `url(${background.path})`\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blogs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      style: backgroundStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"manuel-navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      className: \"bar\",\n      bg: \"light\",\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/ingredients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/recipes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"Recipes\"), /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"/blogs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Blogs\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-info\",\n      className: \"create_button\",\n      href: \"/create\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Create New Blog\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blog_section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, blogs_info.map(article => /*#__PURE__*/React.createElement(BlogItem, {\n      src: article.imageURL,\n      text: article.title,\n      label: \"Article\",\n      rating: article.rating,\n      path: article.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}\n\nexport default Blog;","map":{"version":3,"sources":["/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/Blog.js"],"names":["React","Component","Navbar","Nav","Button","Form","FormControl","BlogItem","CreateArticle","blogs_info","sanitizeHtml","backgrounds","ID","TOKEN_KEY","URL","Axios","Blog","constructor","random","Math","floor","length","background","state","articles","componentDidMount","url","method","data","localStorage","getItem","then","response","console","log","setState","catch","err","render","backgroundStyle","backgroundImage","path","map","article","imageURL","title","rating"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport BlogItem from \"./BlogItem\";\nimport '../style/Blog.css'\n\nimport CreateArticle from \"./CreateArticle\";\nimport blogs_info from \"../data/articles\";\nimport {sanitizeHtml} from \"bootstrap/js/src/tools/sanitizer\";\nimport {backgrounds} from \"../Background\";\nimport {ID, TOKEN_KEY, URL} from \"../constants\";\nimport Axios from \"axios\";\n\nclass Blog extends Component {\n    constructor() {\n        super();\n        const random = Math.floor(Math.random() * backgrounds.length);\n        // console.log(\"length is \", backgrounds.length)\n        // console.log(backgrounds)\n        const background = backgrounds[random];\n\n\n        this.state = {\n            background: background,\n            blogs_info: blogs_info.articles\n        }\n    }\n\n    // get all the article information in db\n    //Since this blog page need to be called at the time when user click the blog components, so at the time user click the blogs, front end need\n    //to send the request to the backend to get the list of the blogs - Hong\n     componentDidMount() {\n        const url = `${URL}/blogs/`;\n        Axios({\n            method: 'POST',\n            url: url,\n            data: {\n                \"username\": localStorage.getItem(ID)\n            }\n        })\n            .then(\n                response => { //print response\n                    console.log(\"Response: \", response);;\n                    this.setState({blogs_info: response.data})\n                    console.log(\"Clicked !!!!!! Ingredient: \", this.state.blogs_info)\n                    return response.data;\n\n                }\n            )\n            .catch(\n                err => {\n                    console.log(\"Get Articles Failed: \", err);\n                }\n            )\n    }\n\n    // handleArticles = (blogs_info) => {\n    //     let result = [];\n    //\n    //     for (var i = 0; i < blogs_info.length; i++){\n    //         let article = blogs_info[i];\n    //         const id = article._id.$oid;\n    //         console.log(\"id is: \", id)\n    //         result.push(<BlogItem\n    //             src={article.imageURL}\n    //             text={article.title}\n    //             label=\"Article\"\n    //             rating={article.rating}\n    //             // _id: {$oid: \"5fae11b077e74277bdbbbd5e\"}\n    //             path={id}/>)\n    //     }\n    //     return result;\n    // }\n\n    render() {\n        const { background, blogs_info} = this.state;\n        var backgroundStyle = {\n            backgroundImage: `url(${background.path})`\n        };\n\n        return (\n            <div className=\"blogs\">\n                {/*navigation bar*/}\n                <div className=\"background\" style={backgroundStyle}/>\n                <div className=\"manuel-navbar\">\n                    <Navbar className=\"bar\" bg=\"light\" variant=\"light\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        {/*<Nav.Link href=\"/popular\">Popular</Nav.Link>*/}\n                        <Nav.Link href=\"/ingredients\">Ingredients</Nav.Link>\n                        <Nav.Link href=\"/recipes\">Recipes</Nav.Link>\n                        <Navbar.Brand href=\"/blogs\">Blogs</Navbar.Brand>\n                        <Button variant=\"outline-info\" className=\"create_button\"\n                                href=\"/create\">Create New Blog</Button>\n                    </Navbar>\n                </div>\n\n                {/*article contents*/}\n                <div>\n                    <div className=\"blog_section\">\n                        {\n                            blogs_info.map(article =>\n                                <BlogItem\n                                    src={article.imageURL}\n                                    text={article.title}\n                                    label=\"Article\"\n                                    rating={article.rating}\n                                    path={article.title}/>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Blog;"]},"metadata":{},"sourceType":"module"}