{"ast":null,"code":"var _jsxFileName = \"/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from 'react';\nimport { Form, Button, FormControl, Modal, InputGroup, ButtonGroup, ToggleButton, Alert, Badge } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Recipe_content from './Recipe_content';\nimport { backgrounds } from \"../Background\";\nimport { ingredientTypes } from \"../data/Ingredients-Type\";\nimport { browserHistory } from 'react-router'; //please install: npm survey-react\n\nconst Recipe = props => {\n  _s();\n\n  // FEATURE: a filtering option which will categorize recipes based on:\n  // 1. calories\n  // 2. number of ingredients\n  // 3. time taken to cook\n  // const random = Math.floor(Math.random() * backgrounds.length);\n  console.log(\"length is \", ingredientTypes.itinerary.length);\n  console.log(ingredientTypes);\n  const background = backgrounds[1];\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const APP_ID = \"20f1ff13\"; //for edamam\n\n  const APP_KEY = \"03bebbf529983bfce2335582096b0dff\"; //for edamam\n\n  const [recipes, setRecipes] = useState([]);\n  var dummy = props.match.params.id;\n\n  if (dummy != ':id') {\n    dummy = props.match.params.id;\n  } else {\n    dummy = '';\n  }\n\n  const [search, setSearch] = useState(dummy);\n  const [query, setQuery] = useState(dummy); // select Ingredient: contains a string which has a food ingredient\n  // clickFlag true if the user clicks an ingredient\n\n  const selectIngredient = props.match.params.id;\n  const clickFlag = props.location.state;\n  var clicked = clickFlag;\n\n  if (props != null) {\n    console.log(\"In recipes\");\n    console.log(\"data1\", selectIngredient);\n    console.log(\"data2\", clickFlag);\n  }\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    console.log(data);\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n\n    if (clicked) {\n      setQuery(selectIngredient);\n      clicked = false;\n      console.log(\"not clicked: \", clickFlag); //clickFlag = false;\n    } else {\n      setQuery(search);\n      setSearch(search);\n    }\n\n    console.log(\"searching...\", search); //setSearch('');\n  };\n\n  const backgroundStyle = {\n    backgroundImage: `url(${background.path})`\n  };\n  const [timeValue, setTimeValue] = useState('1000000');\n  const times = [{\n    name: '30 minutes',\n    value: '30'\n  }, {\n    name: '1 hour',\n    value: '60'\n  }, {\n    name: '2 hour',\n    value: '120'\n  }, {\n    name: 'infinite',\n    value: '1000000'\n  }];\n  const [calorieValue, setCalorieValue] = useState('1000000');\n  const calories = [{\n    name: '<100 Cal',\n    value: '1000'\n  }, {\n    name: '<500 Cal',\n    value: '5000'\n  }, {\n    name: 'no diet',\n    value: '1000000'\n  }];\n  const [numValue, setNumValue] = useState('1000000');\n  const nums = [{\n    name: '<5 items',\n    value: '5'\n  }, {\n    name: '<10 items',\n    value: '10'\n  }, {\n    name: 'no budget',\n    value: '1000000'\n  }];\n  const [shows, setShows] = useState(true);\n  return (\n    /*#__PURE__*/\n    // the \"navbar\" is required to be consistent accross all pages\n    // Manuel-navbar is a configuration used to create the same search bar\n    React.createElement(\"div\", {\n      className: \"Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      style: backgroundStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"manuel-navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      className: \"bar\",\n      bg: \"light\",\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/ingredients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"/recipes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Recipes\"), /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"/blogs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"Blogs\"), /*#__PURE__*/React.createElement(Nav, {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-success\",\n      onClick: handleShow,\n      placement: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"Filter My Recipes\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: getSearch,\n      className: \"Search-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-bar\",\n      placeholder: \"Search\",\n      type: \"text\",\n      value: search,\n      onChange: updateSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"search-button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"search\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"Filter Search for \\\"\", search, \"\\\"\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      pill: true,\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"Time\"), ' ', /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonGroup, {\n      toggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, times.map((time, idx) => /*#__PURE__*/React.createElement(ToggleButton, {\n      key: idx,\n      type: \"radio\",\n      variant: \"secondary\",\n      name: \"radio\",\n      value: time.value,\n      checked: timeValue === time.value,\n      onChange: e => setTimeValue(e.currentTarget.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, time.name))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Badge, {\n      pill: true,\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"Calories\"), ' ', /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonGroup, {\n      toggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, calories.map((calorie, idx) => /*#__PURE__*/React.createElement(ToggleButton, {\n      key: idx,\n      type: \"radio\",\n      variant: \"secondary\",\n      name: \"radio\",\n      value: calorie.value,\n      checked: calorieValue === calorie.value,\n      onChange: e => setCalorieValue(e.currentTarget.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, calorie.name))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Badge, {\n      pill: true,\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, \"# of Ingredients\"), ' ', /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonGroup, {\n      toggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, nums.map((num, idx) => /*#__PURE__*/React.createElement(ToggleButton, {\n      key: idx,\n      type: \"radio\",\n      variant: \"secondary\",\n      name: \"radio\",\n      value: num.value,\n      checked: numValue === num.value,\n      onChange: e => setNumValue(e.currentTarget.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, num.name)))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, \"Close\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recipes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }, recipes.filter(food => food.recipe.calories < calorieValue && food.recipe.totalTime < timeValue && food.recipe.ingredients.length < numValue).map(recipe => /*#__PURE__*/React.createElement(Recipe_content // key={recipe.recipe.label}\n    , {\n      recipes: recipe,\n      title: recipe.recipe.label,\n      image: recipe.recipe.image,\n      ingredients: recipe.recipe.ingredients,\n      calories: recipe.recipe.calories,\n      dietLabels: recipe.recipe.dietLabels,\n      healthLabels: recipe.recipe.healthLabels,\n      url: recipe.recipe.url,\n      source: recipe.recipe.source,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }))))\n  );\n};\n\n_s(Recipe, \"RKbL8eUbomIhE0FViIjbfqb+igo=\");\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/Recipe.js"],"names":["React","useEffect","useState","Component","Form","Button","FormControl","Modal","InputGroup","ButtonGroup","ToggleButton","Alert","Badge","Nav","Navbar","Recipe_content","backgrounds","ingredientTypes","browserHistory","Recipe","props","console","log","itinerary","length","background","show","setShow","handleClose","handleShow","APP_ID","APP_KEY","recipes","setRecipes","dummy","match","params","id","search","setSearch","query","setQuery","selectIngredient","clickFlag","location","state","clicked","getRecipes","response","fetch","data","json","hits","updateSearch","e","target","value","getSearch","preventDefault","backgroundStyle","backgroundImage","path","timeValue","setTimeValue","times","name","calorieValue","setCalorieValue","calories","numValue","setNumValue","nums","shows","setShows","map","time","idx","currentTarget","calorie","num","filter","food","recipe","totalTime","ingredients","label","image","dietLabels","healthLabels","url","source"],"mappings":"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","sourcesContent":["import React, {useEffect, useState,Component} from 'react';\nimport {Form, Button, FormControl, Modal, InputGroup, ButtonGroup, ToggleButton, Alert, Badge} from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Recipe_content from './Recipe_content';\n\nimport {backgrounds} from \"../Background\";\nimport {ingredientTypes} from \"../data/Ingredients-Type\";\n\nimport { browserHistory } from 'react-router'\n//please install: npm survey-react\n\nconst Recipe = (props) => {\n    \n    // FEATURE: a filtering option which will categorize recipes based on:\n    // 1. calories\n    // 2. number of ingredients\n    // 3. time taken to cook\n\n    // const random = Math.floor(Math.random() * backgrounds.length);\n    console.log(\"length is \", ingredientTypes.itinerary.length)\n    console.log(ingredientTypes)\n    const background = backgrounds[1];\n  \n  \n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const APP_ID = \"20f1ff13\"; //for edamam\n    const APP_KEY = \"03bebbf529983bfce2335582096b0dff\"; //for edamam\n    \n    const [recipes, setRecipes] = useState([]);\n    var dummy = props.match.params.id;\n  \n    if(dummy != ':id'){\n        dummy = props.match.params.id;\n    } else{\n        dummy = '';\n    }\n    const [search, setSearch] = useState(dummy);\n    const [query, setQuery] = useState(dummy);\n    \n    // select Ingredient: contains a string which has a food ingredient\n    // clickFlag true if the user clicks an ingredient\n    const selectIngredient = props.match.params.id;\n    const clickFlag = props.location.state;\n    var clicked = clickFlag;\n\n    if(props != null){\n        console.log(\"In recipes\");\n        console.log(\"data1\", selectIngredient)\n        console.log(\"data2\", clickFlag)\n\n    }\n\n    useEffect(() => {\n        getRecipes();\n    }, [query]);\n    \n    const getRecipes = async () => {\n        const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n        const data = await response.json();\n        console.log(data);\n        setRecipes(data.hits);\n    };\n\n    const updateSearch = e => {\n        setSearch(e.target.value);\n    }\n    \n\n\n    const getSearch = e => {\n        e.preventDefault();\n\n        if(clicked){\n            setQuery(selectIngredient)\n            clicked = false;\n            \n            console.log(\"not clicked: \", clickFlag)\n            //clickFlag = false;\n        } else{\n            setQuery(search)\n            setSearch(search);\n        }\n        \n        \n        console.log(\"searching...\", search)\n        //setSearch('');\n    }\n\n    const backgroundStyle = {\n        backgroundImage: `url(${background.path})`\n    };\n\n    const [timeValue, setTimeValue] = useState('1000000');\n\n    const times = [\n      { name: '30 minutes', value: '30' },\n      { name: '1 hour', value: '60' },\n      { name: '2 hour', value: '120' },\n      { name: 'infinite', value: '1000000' },\n    ];\n\n    const [calorieValue, setCalorieValue] = useState('1000000');\n\n    const calories = [\n      { name: '<100 Cal', value: '1000' },\n      { name: '<500 Cal', value: '5000' },\n      { name: 'no diet', value: '1000000' },\n    ];\n\n    const [numValue, setNumValue] = useState('1000000');\n\n    const nums = [\n      { name: '<5 items', value: '5' },\n      { name: '<10 items', value: '10' },\n      { name: 'no budget', value: '1000000' },\n    ];\n\n    const [shows, setShows] = useState(true);\n  \n    return (\n\n\n        // the \"navbar\" is required to be consistent accross all pages\n        // Manuel-navbar is a configuration used to create the same search bar\n\n        <div className=\"Recipe\">\n            <div className=\"background\" style={backgroundStyle}/>\n\n            <div className=\"manuel-navbar\">\n                <Navbar className=\"bar\" bg=\"light\" variant=\"light\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/ingredients\">Ingredients</Nav.Link>\n                    <Navbar.Brand href=\"/recipes\">Recipes</Navbar.Brand>\n                    <Nav.Link href=\"/blogs\">Blogs</Nav.Link>\n\n                    <Nav className=\"mr-auto\">\n                        <Form inline>\n                            <Button variant=\"outline-success\" onClick={handleShow} placement=\"right\">\n                                Filter My Recipes\n                            </Button>\n                        </Form>\n                    </Nav>\n                    {/*<Nav className=\"mr-auto\">*/}\n                    {/*    <Form inline>*/}\n                    {/*        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />*/}\n                    {/*        <Button variant=\"outline-info\">Search</Button>*/}\n                    {/*    </Form>*/}\n                    {/*</Nav>*/}\n                </Navbar>\n            </div>\n\n            <div>\n\n                <form onSubmit={getSearch} className=\"Search-form\">\n                    <input className=\"search-bar\" placeholder=\"Search\" type=\"text\" value={search} onChange={updateSearch}/>\n                    <button className=\"search-button\" type=\"submit\">\n                        search\n                    </button>\n                </form>\n            </div>\n\n            \n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            \n            \n\n            <>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>Filter Search for \"{search}\"</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    <Badge pill variant=\"success\">\n                        Time\n                    </Badge>{' '}\n                    <br />\n                    <ButtonGroup toggle>\n                        {times.map((time, idx) => (\n                        <ToggleButton\n                            key={idx}\n                            type=\"radio\"\n                            variant=\"secondary\"\n                            name=\"radio\"\n                            value={time.value}\n                            checked={timeValue === time.value}\n                            onChange={(e) => setTimeValue(e.currentTarget.value)}\n                        >\n                            {time.name}\n                        </ToggleButton>\n                        ))}\n                    </ButtonGroup>\n                    <br />\n                    <br />\n                    <Badge pill variant=\"success\">\n                        Calories\n                    </Badge>{' '}\n                    <br />\n                    <ButtonGroup toggle>\n                        {calories.map((calorie, idx) => (\n                        <ToggleButton\n                            key={idx}\n                            type=\"radio\"\n                            variant=\"secondary\"\n                            name=\"radio\"\n                            value={calorie.value}\n                            checked={calorieValue === calorie.value}\n                            onChange={(e) => setCalorieValue(e.currentTarget.value)}\n                        >\n                            {calorie.name}\n                        </ToggleButton>\n                        ))}\n                    </ButtonGroup>\n                    <br />\n                    <br />\n                    <Badge pill variant=\"success\">\n                        # of Ingredients\n                    </Badge>{' '}\n                    <br />\n                    <ButtonGroup toggle>\n                        {nums.map((num, idx) => (\n                        <ToggleButton\n                            key={idx}\n                            type=\"radio\"\n                            variant=\"secondary\"\n                            name=\"radio\"\n                            value={num.value}\n                            checked={numValue === num.value}\n                            onChange={(e) => setNumValue(e.currentTarget.value)}\n                        >\n                            {num.name}\n                        </ToggleButton>\n                        ))}\n                    </ButtonGroup>\n                \n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    <Button variant=\"warning\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    \n                    </Modal.Footer>\n                </Modal>\n            </>\n            \n            <div className=\"recipes\">\n            \n                {recipes.filter(food => ((food.recipe.calories < calorieValue) && (food.recipe.totalTime < timeValue) && (food.recipe.ingredients.length < numValue))).map(recipe =>(\n\n                    <Recipe_content\n                    // key={recipe.recipe.label}\n                        recipes={recipe}\n                    title={recipe.recipe.label}\n                    image={recipe.recipe.image}\n                    ingredients={recipe.recipe.ingredients}\n                    calories={recipe.recipe.calories}\n                    dietLabels={recipe.recipe.dietLabels}\n                    healthLabels={recipe.recipe.healthLabels}\n                    url={recipe.recipe.url}\n                    source={recipe.recipe.source}\n\n                    />\n                ))}\n\n\n            </div>\n        </div>\n    );\n};\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}