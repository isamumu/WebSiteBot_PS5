{"ast":null,"code":"var _jsxFileName = \"/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/Recipe_content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport style from './Recipe.module.css';\nimport { ID, TOKEN_KEY, URL } from \"../constants\";\nimport Axios from \"axios\";\nimport { Card, ListGroup, ListGroupItem, Button, Form, Alert, Badge, Modal, FormControl } from \"react-bootstrap\";\nimport { render } from '@testing-library/react';\n\nconst Recipe_content = ({\n  recipes,\n  title,\n  calories,\n  image,\n  ingredients,\n  dietLabels,\n  healthLabels,\n  url,\n  source\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //localStorage.clear();\n\n\n  const handleRecipesSave = recipe => {\n    setShowAlert(true);\n    console.log(\"Save button\", recipe);\n    var myUrl = url;\n    localStorage.setItem(localStorage.length, JSON.stringify(myUrl.replace(/['\"]+/g, ''))); // alert(\"Saved Success, Check \\\"Saved Recipes\\\" for list\")\n\n    console.log(\"YES\", myUrl.replace(/['\"]+/g, '')); // save to local chrome cache, then read from cache again\n    // const url = `${URL}/recipes/save`;\n    // Axios({\n    //     method: 'POST',\n    //     url: url,\n    //     data: {\n    //         username: localStorage.getItem(ID),\n    //         label: recipe.label,\n    //         image: recipe.image,\n    //         url: recipe.url\n    //     }\n    // })\n    //     .then(\n    //         response => {\n    //             //TODO\n    //             if (response.data.status === \"fail\") {\n    //                 console.log(\"save not successful\");\n    //             } else {\n    //                 console.log(\"save successful\");\n    //                 // need popup\n    //             }\n    //         }\n    //     )\n    //     .catch(\n    //         err => {\n    //             console.log(\"Login failed\");\n    //         }\n    //     )\n  };\n\n  console.log(\"number of Ingredients: \", ingredients.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: style.recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    pill: true,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Labels\"), \" \", healthLabels[0], \", \", healthLabels[1]), /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    pill: true,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Diet\"), \" \", dietLabels), /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    pill: true,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Calories\"), \" \", (calories / 10).toFixed(0))), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Ingredients\"), ' ', /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, title)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, ingredients.map(ingredient => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, ingredient.text)))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Close\"))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    href: url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"check me out\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: () => handleRecipesSave(recipes),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(Alert, {\n    show: showAlert,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \" Saved! \"), \"Check \\\"Saved Recipes\\\" for list\", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowAlert(false),\n    variant: \"outline-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Close me\"))));\n};\n\n_s(Recipe_content, \"eywrn114DmJ9u5LbnURUMRDhCt4=\");\n\n_c = Recipe_content;\nrender();\nexport default Recipe_content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe_content\");","map":{"version":3,"sources":["/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/Recipe_content.js"],"names":["React","useEffect","useState","style","ID","TOKEN_KEY","URL","Axios","Card","ListGroup","ListGroupItem","Button","Form","Alert","Badge","Modal","FormControl","render","Recipe_content","recipes","title","calories","image","ingredients","dietLabels","healthLabels","url","source","show","setShow","showAlert","setShowAlert","handleClose","handleShow","handleRecipesSave","recipe","console","log","myUrl","localStorage","setItem","length","JSON","stringify","replace","width","toFixed","map","ingredient","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,EAAR,EAAYC,SAAZ,EAAuBC,GAAvB,QAAiC,cAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,IAAR,EAAcC,SAAd,EAAwBC,aAAxB,EAAuCC,MAAvC,EAA+CC,IAA/C,EAAqDC,KAArD,EAA6DC,KAA7D,EAAoEC,KAApE,EAA2EC,WAA3E,QAA6F,iBAA7F;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA,KAA3B;AAAkCC,EAAAA,WAAlC;AAA+CC,EAAAA,UAA/C;AAA2DC,EAAAA,YAA3D;AAAyEC,EAAAA,GAAzE;AAA8EC,EAAAA;AAA9E,CAAD,KAA2F;AAAA;;AAC9G,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAM8B,WAAW,GAAG,MAAMH,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMI,UAAU,GAAG,MAAMJ,OAAO,CAAC,IAAD,CAAhC,CAL8G,CAO9G;;;AACA,QAAMK,iBAAiB,GAAIC,MAAD,IAAY;AAElCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;AAEA,QAAIG,KAAK,GAAGZ,GAAZ;AAEAa,IAAAA,YAAY,CAACC,OAAb,CAAqBD,YAAY,CAACE,MAAlC,EAA0CC,IAAI,CAACC,SAAL,CAAeL,KAAK,CAACM,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAf,CAA1C,EAPkC,CAQlC;;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,KAAK,CAACM,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAnB,EATkC,CAUlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAtCD;;AAwCAR,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCd,WAAW,CAACkB,MAAnD;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAEtC,KAAK,CAACgC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAC,KAAlB;AAAwB,IAAA,GAAG,EAAEvB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaF,KAAb,CADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFA,eAQA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACkDK,YAAY,CAAC,CAAD,CAD9D,QACqEA,YAAY,CAAC,CAAD,CADjF,CADJ,eAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,OACgDD,UADhD,CAJJ,eAOI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,OACoD,CAACH,QAAQ,GAAG,EAAZ,EAAgByB,OAAhB,CAAwB,CAAxB,CADpD,CAPJ,CARA,eAmBA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEb,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAGc,GAHd,eAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEL,IAAb;AAAmB,IAAA,MAAM,EAAEI,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcZ,KAAd,CADJ,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,WAAW,CAACwB,GAAZ,CAAgBC,UAAU,iBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,UAAU,CAACC,IAAhB,CADH,CADL,CADA,CAJJ,eAWI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEjB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAXJ,CALJ,eAsBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAIN,GAA/B;AAAoC,IAAA,MAAM,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ,EAwBc,GAxBd,eA0BI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAG,MAAMQ,iBAAiB,CAACf,OAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ,CAnBA,CAFJ,eAqDI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEW,SAAb;AAAwB,IAAA,OAAO,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,mDAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAAnC;AAA4C,IAAA,OAAO,EAAC,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,CArDJ,CAFJ;AAoEH,CAtHD;;GAAMb,c;;KAAAA,c;AAwHND,MAAM;AAEN,eAAeC,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport style from './Recipe.module.css';\nimport {ID, TOKEN_KEY, URL} from \"../constants\";\nimport Axios from \"axios\";\n\nimport {Card, ListGroup,ListGroupItem, Button, Form, Alert,  Badge, Modal, FormControl} from \"react-bootstrap\";\nimport { render } from '@testing-library/react';\n\n\nconst Recipe_content = ({recipes, title, calories, image, ingredients, dietLabels, healthLabels, url, source}) => {\n    const [show, setShow] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    //localStorage.clear();\n    const handleRecipesSave = (recipe) => {\n        \n        setShowAlert(true);\n        console.log(\"Save button\", recipe)\n\n        var myUrl = url;\n\n        localStorage.setItem(localStorage.length, JSON.stringify(myUrl.replace(/['\"]+/g, '')));\n        // alert(\"Saved Success, Check \\\"Saved Recipes\\\" for list\")\n        console.log(\"YES\", myUrl.replace(/['\"]+/g, ''));\n        // save to local chrome cache, then read from cache again\n        // const url = `${URL}/recipes/save`;\n        // Axios({\n        //     method: 'POST',\n        //     url: url,\n        //     data: {\n        //         username: localStorage.getItem(ID),\n        //         label: recipe.label,\n        //         image: recipe.image,\n        //         url: recipe.url\n        //     }\n        // })\n        //     .then(\n        //         response => {\n        //             //TODO\n        //             if (response.data.status === \"fail\") {\n        //                 console.log(\"save not successful\");\n        //             } else {\n        //                 console.log(\"save successful\");\n        //                 // need popup\n        //             }\n        //         }\n        //     )\n        //     .catch(\n        //         err => {\n        //             console.log(\"Login failed\");\n        //         }\n        //     )\n    }\n\n    console.log(\"number of Ingredients: \", ingredients.length)\n    \n    return (\n        \n        <div className={style.recipe} >\n            \n            <Card style={{ width: '25rem' }}>\n            <Card.Img variant=\"top\" src={image}/>\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>\n                    \n                </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>\n                    <Badge pill variant=\"success\">Labels</Badge> {healthLabels[0]}, {healthLabels[1]}\n                </ListGroupItem>\n                <ListGroupItem>\n                    <Badge pill variant=\"success\">Diet</Badge> {dietLabels}\n                </ListGroupItem>\n                <ListGroupItem>\n                    <Badge pill variant=\"success\">Calories</Badge> {(calories / 10).toFixed(0)}\n                </ListGroupItem>\n            </ListGroup>\n            <Card.Body>\n                <Button variant=\"primary\" onClick={handleShow}>\n                    Ingredients\n                </Button>{' '}\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    <ol>\n                        {ingredients.map(ingredient =>(\n                            <li>{ingredient.text}</li>\n                        ))}\n                    </ol>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Button variant=\"info\" href = {url} target=\"_blank\">\n                    check me out\n                </Button>{' '}\n                \n                <Button variant=\"info\" onClick={ () => handleRecipesSave(recipes)}>\n                    Save\n                </Button> \n\n            </Card.Body>\n            </Card>\n            <Alert show={showAlert} variant=\"success\">\n                <Alert.Heading> Saved! </Alert.Heading>\n                    Check \"Saved Recipes\" for list\n                <hr />\n                <div className=\"d-flex justify-content-end\">\n                    <Button onClick={() => setShowAlert(false)} variant=\"outline-success\">\n                        Close me\n                    </Button>\n                </div>\n            </Alert>\n        </div>\n        \n    );\n};\n\nrender();\n\nexport default Recipe_content;"]},"metadata":{},"sourceType":"module"}