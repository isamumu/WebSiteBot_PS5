{"ast":null,"code":"var _jsxFileName = \"/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/SavedRecipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from 'react';\nimport { Form, Button, FormControl, ListGroup, Modal, ButtonGroup, ToggleButton, Alert, Badge } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Recipe_content from './Recipe_content';\nimport { backgrounds } from \"../Background\";\nimport { ingredientTypes } from \"../data/Ingredients-Type\";\nimport { browserHistory } from 'react-router'; //please install: npm survey-react\n\nconst SavedRecipe = props => {\n  _s();\n\n  // FEATURE: a filtering option which will categorize recipes based on:\n  // 1. calories\n  // 2. number of ingredients\n  // 3. time taken to cook\n  const random = Math.floor(Math.random() * backgrounds.length);\n  const background = backgrounds[random];\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const APP_ID = \"20f1ff13\"; //for edamam\n\n  const APP_KEY = \"03bebbf529983bfce2335582096b0dff\"; //for edamam\n\n  const [recipes, setRecipes] = useState([]);\n  console.log(\"Le Recipe\", recipes);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('ice cream');\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    console.log(data);\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(search);\n    console.log(\"searching...\", search); //setSearch('');\n  };\n\n  const backgroundStyle = {\n    backgroundImage: `url(${background.path})`\n  };\n  var listOfList = [];\n\n  for (var i = 0; i < localStorage.length; i++) {\n    console.log(\"=======================================================\");\n    listOfList[i] = localStorage.getItem(localStorage.key(i));\n    console.log(\"we got: \", listOfList[i]);\n  }\n\n  return (\n    /*#__PURE__*/\n    // the \"navbar\" is required to be consistent accross all pages\n    // Manuel-navbar is a configuration used to create the same search bar\n    React.createElement(\"div\", {\n      className: \"Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      style: backgroundStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ListGroup, {\n      as: \"ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, listOfList.map(note => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      variant: \"success\",\n      action: true,\n      href: note.replace(/['\"]+/g, ''),\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 42\n      }\n    }, note.replace(/['\"]+/g, '')))))\n  );\n};\n\n_s(SavedRecipe, \"Fb/l2X3ZTSvgXM9+n9ywChdHGhY=\");\n\n_c = SavedRecipe;\nexport default SavedRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedRecipe\");","map":{"version":3,"sources":["/Users/hongxu/Documents/ECE444/ECE444-project-Frontend/src/components/SavedRecipe.js"],"names":["React","useEffect","useState","Component","Form","Button","FormControl","ListGroup","Modal","ButtonGroup","ToggleButton","Alert","Badge","Nav","Navbar","Recipe_content","backgrounds","ingredientTypes","browserHistory","SavedRecipe","props","random","Math","floor","length","background","show","setShow","handleClose","handleShow","APP_ID","APP_KEY","recipes","setRecipes","console","log","search","setSearch","query","setQuery","getRecipes","response","fetch","data","json","hits","updateSearch","e","target","value","getSearch","preventDefault","backgroundStyle","backgroundImage","path","listOfList","i","localStorage","getItem","key","map","note","replace"],"mappings":"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","sourcesContent":["import React, {useEffect, useState,Component} from 'react';\nimport {Form, Button, FormControl, ListGroup, Modal, ButtonGroup, ToggleButton, Alert, Badge} from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Recipe_content from './Recipe_content';\n\nimport {backgrounds} from \"../Background\";\nimport {ingredientTypes} from \"../data/Ingredients-Type\";\n\nimport { browserHistory } from 'react-router'\n//please install: npm survey-react\n\nconst SavedRecipe = (props) => {\n    \n    // FEATURE: a filtering option which will categorize recipes based on:\n    // 1. calories\n    // 2. number of ingredients\n    // 3. time taken to cook\n\n    const random = Math.floor(Math.random() * backgrounds.length);\n    const background = backgrounds[random];\n  \n  \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const APP_ID = \"20f1ff13\"; //for edamam\n    const APP_KEY = \"03bebbf529983bfce2335582096b0dff\"; //for edamam\n    \n    const [recipes, setRecipes] = useState([]);\n    console.log(\"Le Recipe\", recipes)\n    \n    const [search, setSearch] = useState('');\n    const [query, setQuery] = useState('ice cream');\n\n    useEffect(() => {\n        getRecipes();\n    }, [query]);\n    \n    const getRecipes = async () => {\n        const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n        const data = await response.json();\n        console.log(data);\n        setRecipes(data.hits);\n    };\n\n    const updateSearch = e => {\n        setSearch(e.target.value);\n    }\n\n    const getSearch = e => {\n        e.preventDefault();\n\n        setQuery(search)\n        setSearch(search);\n        \n        console.log(\"searching...\", search)\n        //setSearch('');\n    }\n\n    const backgroundStyle = {\n        backgroundImage: `url(${background.path})`\n    };\n\n    var listOfList =[];\n    for (var i = 0; i < localStorage.length; i++){\n\n        \n        console.log(\"=======================================================\")\n        listOfList[i] = localStorage.getItem(localStorage.key(i))\n        console.log(\"we got: \", listOfList[i]);\n\n    }\n\n    return (\n\n\n        // the \"navbar\" is required to be consistent accross all pages\n        // Manuel-navbar is a configuration used to create the same search bar\n\n        <div className=\"Recipe\">\n            <div className=\"background\" style={backgroundStyle}/>\n            \n            <ListGroup as=\"ul\">\n\n                {listOfList.map(note => (<ListGroup.Item variant=\"success\" action href={note.replace(/['\"]+/g, '')} target=\"_blank\">{note.replace(/['\"]+/g, '')}</ListGroup.Item>))}\n                \n            </ListGroup>\n            \n            \n        </div>\n    );\n};\n\nexport default SavedRecipe;"]},"metadata":{},"sourceType":"module"}